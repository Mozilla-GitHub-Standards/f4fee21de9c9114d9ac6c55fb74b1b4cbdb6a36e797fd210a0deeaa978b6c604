---
- hosts: jenkins
  remote_user: "{{ remote_user }}"
  sudo: True
  tasks:
    - name: Install common Ops packages
      apt: name={{ item }} state=present update_cache=yes cache_valid_time=600
      with_items:
        - htop
        - python-virtualenv
        - python-pip

    - name: Install mailutils for email sending
      apt: name=mailutils state=present update_cache=yes cache_valid_time=600

    - name: Set Postfix to listen on 127.0.0.1 only
      command:
        postconf -e 'inet_interfaces = 127.0.0.1'
      notify:
        - Restart Postfix

    - name: Install nginx
      apt: name=nginx-light state=present update_cache=yes cache_valid_time=600

    # We are going into maintenance mode, stop nginx.
    - name: Stop nginx
      service: name=nginx state=stopped

    - name: Copy SSL key
      copy:
        src=ssl/ssl.key
        dest=/etc/nginx/ssl.key
        force=yes
        mode=0600
        owner=root
        group=root

    - name: Copy SSL cert
      copy:
        src=ssl/ssl.crt
        dest=/etc/nginx/ssl.crt
        force=yes
        mode=0600
        owner=root
        group=root

    - name: Copy nginx configuration
      template:
        src: templates/nginx-cfg.j2
        dest: /etc/nginx/sites-enabled/default
        group: root
        owner: root
        mode: 0644
      notify: Reload Nginx

    - name: Add Docker Repository Key
      apt_key:
        state=present
        keyserver=keyserver.ubuntu.com
        id=36A1D7869245C8950F966E92D8576A8BA88D21E9

    - name: Add Docker Repository
      apt_repository:
        repo='deb https://get.docker.io/ubuntu docker main'
        state=present
        update_cache=yes

    - name: Install Docker
      apt: name=lxc-docker state=present update_cache=yes cache_valid_time=600

    - name: Add Jenkins-CI Repository Key
      apt_key: url=http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key state=present

    - name: Add Jenkins-CI Repository
      apt_repository:
        repo='deb http://pkg.jenkins-ci.org/debian binary/'
        state=present
        update_cache=yes

    - name: Install Jenkins-CI
      apt: name=jenkins state=present update_cache=yes cache_valid_time=600
      notify:
        - Restart Jenkins
      register: install_jenkins

    - name: Add Jenkins user to docker group
      user: name=jenkins groups=docker
      notify: Restart Jenkins

    - name: Set Jenkins-CI to listen only on 127.0.0.1
      lineinfile:
        dest=/etc/default/jenkins
        regexp=^JENKINS_ARGS=
        line='JENKINS_ARGS="--webroot=/var/cache/jenkins/war --httpPort=$HTTP_PORT --httpListenAddress=127.0.0.1"'
      notify: Restart Jenkins

    - name: Set Jenkins-CI configuration
      template:
        src: templates/jenkins/{{ item }}.j2
        dest: /var/lib/jenkins/{{ item }}
        group: jenkins
        owner: jenkins
        mode: 0640
        backup: yes
      with_items:
        - config.xml
        - jenkins.model.JenkinsLocationConfiguration.xml
        - org.jenkinsci.main.modules.sshd.SSHD.xml
        - hudson.tasks.Mailer.xml
        - hudson.plugins.ircbot.IrcPublisher.xml
        - hudson.plugins.bugzilla.BugzillaProjectProperty.xml
        - com.cloudbees.jenkins.GitHubPushTrigger.xml
        - org.jenkinsci.plugins.ghprb.GhprbTrigger.xml
      notify: Restart Jenkins
      tags:
        - jenkins-conf
        - install-plugins

    # Unset security, so we can install plugins and other stuff
    # without too much trouble.
    - name: Set maintenance Jenkins-CI configuration
      lineinfile:
        dest=/var/lib/jenkins/config.xml
        regexp='<useSecurity>true</useSecurity>'
        line='<useSecurity>false</useSecurity>'
      notify: Unset maintenance Jenkins-CI configuration
      tags:
        - install-plugins

    - name: (Re)-Start Jenkins-CI
      service: name=jenkins state=restarted
      tags:
        - install-plugins

    - name: Wait until Jenkins web API is available
      shell: curl --head --silent http://localhost:8080/cli/
      register: result
      until: result.stdout.find("200 OK") != -1
      retries: 12
      delay: 5
      tags:
        - install-plugins

    - name: Get Jenkins-CLI
      get_url:
        url=http://localhost:8080/jnlpJars/jenkins-cli.jar
        dest=/home/ubuntu/jenkins-cli.jar
        mode=0440
      tags:
        - install-plugins

    - name: Add first Jenkins-CI user
      shell:
        echo "hpsr=new hudson.security.HudsonPrivateSecurityRealm(false); hpsr.createAccount('{{ jenkins_user }}', '{{ jenkins_password }}')" | java -jar jenkins-cli.jar -s http://localhost:8080 groovy =

    - name: Force Jenkins-CI to update plugin list
      shell:
        "curl  -L http://updates.jenkins-ci.org/update-center.json | sed '1d;$d' | curl -X POST -H 'Accept: application/json' -d @- http://localhost:8080/updateCenter/byId/default/postBack"
      tags:
        - install-plugins

    - name: Install Jenkins Plugins
      command:
        java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin {{ item }}
      with_items:
        - envinject
        - conditional-buildstep
        - embeddable-build-status
        - git
        - github
        - bugzilla
        - ircbot
        - ghprb
        - postbuild-task
        - periodic-reincarnation
      notify: Restart Jenkins
      tags:
        - install-plugins

    - name: Start nginx
      service: name=nginx state=started

  handlers:
    - name: Reload Nginx
      service: name=nginx state=reloaded
      sudo_user: root

    - name: Unset maintenance Jenkins-CI configuration
      lineinfile:
        dest=/var/lib/jenkins/config.xml
        regexp='<useSecurity>false</useSecurity>'
        line='<useSecurity>true</useSecurity>'

    - name: Restart Jenkins
      service: name=jenkins state=restarted
      sudo_user: root

    - name: Restart Postfix
      service: name=postfix state=restarted
      sudo_user: root

  vars_files:
    - local_variables.yml
